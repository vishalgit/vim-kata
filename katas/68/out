Task: Practice window, tab, and pane management while working with a Node.js/Express application.

Project Structure:
src/
  ├── server/
  │   ├── index.ts      (Main server file)
  │   └── routes.ts     (Route definitions)
  └── test/
      └── api.test.ts   (API tests)

Exercises:

1. Basic Window Splits:
   - :vs to create vertical split
   - :sp to create horizontal split
   - <C-w>h/j/k/l to navigate splits
   - <C-w>= to make splits equal size
   - <C-w>_ to maximize height
   - <C-w>| to maximize width

2. Advanced Window Management:
   - <C-w>r to rotate windows
   - <C-w>x to exchange windows
   - <C-w>T to move window to new tab
   - :resize +5 to increase height
   - :vertical resize +10 to increase width

3. Tab Operations:
   - :tabnew to create new tab
   - :tabedit file.ts to open file in new tab
   - gt or :tabnext to go to next tab
   - gT or :tabprev to go to previous tab
   - :tabmove +1 to move tab right
   - :tabclose to close current tab

4. Multiple File Workflow:
   a) Server Development:
      - Open index.ts in main window
      - :vs routes.ts for vertical split
      - :sp in routes.ts to see related controller
      - <C-w>T to move controller to new tab

   b) Test Development:
      - :tabnew api.test.ts for tests
      - :vs ../src/server/index.ts to see implementation
      - :sp to add another test file

5. Buffer and Window Combinations:
   - :ls to list all buffers
   - :vert sb 2 to open buffer 2 in vertical split
   - :tab sb 3 to open buffer 3 in new tab
   - :ball to open all buffers in windows

Advanced Exercises:

1. Three-Panel Layout:
   ```
   +-----------+-----------+
   |           |           |
   | index.ts  | routes.ts |
   |           |           |
   +-----------+-----------+
   |     api.test.ts      |
   |                      |
   +----------------------+
   ```
   Steps:
   - :vs routes.ts
   - <C-w>j
   - :sp api.test.ts
   - <C-w>= to equalize

2. Test-Driven Layout:
   ```
   +----------+----------+
   | test.ts  | impl.ts |
   +----------+----------+
   ```
   Steps:
   - :vs to split vertically
   - Open test on left, implementation on right
   - Use <C-w>x to swap if needed

Tips:
- Use <C-w>w to cycle through windows
- <C-w>o to make current window only one
- :only is same as <C-w>o
- :tab ball to open all buffers in tabs
- :tabonly to close all other tabs
- :windo difft to diff all windows
- Use :help window-moving for more commands

Remember:
- <C-w> is the prefix for most window commands
- Use :tab help for tab-specific help
- Window commands can be repeated with counts
- Most commands work with [count] prefix 