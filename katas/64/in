# template.html
Task: Practice regex patterns for HTML manipulation and extraction.

Exercises:
1. Match all tag attributes (non-greedy):
   - /\<[^>]\{-}\>/    (matches complete tags)
   - /\w\+="[^"]\{-}"/ (matches attribute="value")

2. Extract specific tags with content:
   - /<title>.\{-}<\/title>/
   - /<h[1-6]>.\{-}<\/h[1-6]>/

3. Find all script sources (capture groups):
   - /<script.*src="\([^"]\+\)".*>/

4. Match nested divs (multi-line):
   - /<div.\{-}>\_.\{-}<\/div>/

5. Extract data attributes:
   - /data-[^= ]\+="[^"]\+"/

Solution steps:
1. Finding tags:
   - :g/<script/p - list all script tags
   - :v/<script/d - delete everything except script tags

2. Modifying attributes:
   - :%s/class="\([^"]\+\)"/class="\1 new-class"/g
   - :%s/data-timestamp="\zs[^"]\+\ze"/2024-03-15/g

3. Working with nested content:
   - /<div\_.\{-}class="profile-card"\_.\{-}<\/div>/
   - Use \_ to include newlines in patterns

Advanced patterns:
1. Balanced tag matching:
   - /<div\([^>]*\)>\(\_.\{-}\)<\/div>/
   - Use \2 to reference nested content

2. Multiple capture groups:
   - /<\(\w\+\)\([^>]*\)>\(.\{-}\)<\/\1>/
   - \1 references the tag name
   - \2 references attributes
   - \3 references content

3. Conditional patterns:
   - /<img\%(.*alt="\([^"]\+\)"\)\@=/
   - Matches img tags only if they have alt attribute

Tips:
- Use :set syntax=html for better visibility
- Test patterns with :set incsearch
- Use \v for very magic mode
- Remember to escape / in file paths
- Use :g// with :p to preview matches
- Combine with normal mode: :g/pattern/normal @q 